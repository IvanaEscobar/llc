#!/bin/bash

## Set up suffix for adjoint run: "_ad"
#  or leave as "" for forward run
suff="_ad"
build_suff="_08"
proj=pig

## Set up directories
root_dir=$HOME/MITgcm_c66i+
exp_dir=$PWD
build_dir=$exp_dir/build$suff$build_suff
build_dir_ad_proj=$HOME/adj-build/$proj
build_dir_ad=$build_dir_ad_proj/build_ad$build_suff
code_dir=$exp_dir/code$suff$build_suff

## Opt file architecture specific
sverdrup_opt=$computing/optfiles/linux_amd64_ifort+mpi_sverdrup

## Use the correct opt file here
build_cmd="$root_dir/tools/genmake2 -rd=$root_dir -mods=$code_dir -optfile=$sverdrup_opt -mpi -adoptfile=$computing/optfiles/adjoint_132"
#tmp="make_junk"$suff".txt"

## Check which run to set up
if [[ $suff == "_ad" ]]
  then
        echo "Preparing adjoint run ..."
	## Build the model in build directory
        if [ ! -d $build_dir_ad_proj ] 
        then
                mkdir $build_dir_ad_proj
        fi
	if [ ! -d $build_dir_ad  ] 
  	then
        	mkdir $build_dir_ad
	else
	        cd $build_dir_ad
	        if [ -s Makefile ] ; then
			make CLEAN
		fi
	fi
        ## Generate a soft link in experiment directory
        echo $build_dir
        if [ ! -d $build_dir ] ; then
                ln -sv $build_dir_ad $build_dir
        fi
	
	cd $build_dir_ad
elif [[ $suff == "_forw" ]]
  then
        echo "Preparing forward run ..."
	## Build the model in build directory
	if [ ! -d $build_dir  ] 
  	then
        	mkdir $build_dir
	else
	        cd $build_dir
	        if [ -s Makefile ] ; then
			make CLEAN
		fi
	fi

	cd $build_dir
else
        echo "Unsure of suffix, exiting ..."
        exit 1
fi

echo "Inside dir: "$PWD

echo "Evaluating: "$build_cmd
eval $build_cmd 
echo "Make depend ..."
eval "make depend" 
echo "Making executable ..."
if [[ $suff == "_ad" ]] ; then
  eval "make -j 16 ad_input_code.f" 
else
  eval "make -j 16"
fi
